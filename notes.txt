Cookie Format:
    * Structure
        - id + sha256 hash of id
    * Information
        - id: identifies the user                                       format: string
        - sha256 hash of id: validates id has not been tampered w/      format: string


User Data:
    * Structure
        - id
            ~ pages
            ~ complete
            ~ pid
            ~ start
            ~ end
    * Information
        - id: identifies the user,                                      format: string
        - pages: assigned puzzles,                                      format: list of strings
        - complete: number of completed puzzles,                        format: integer
        - pid: current puzzle user is on,                               format: string
        - start: time of start in unix time                             format: float
        - end: time of end in unix time                                 format: float


Statistics:
    * Structure
        - Players
        - Completions
        - Tamper Attempts
        - Finishers
        - Puzzle Completions
    * Information
        - Players: number of people to play                             format: integer
        - Completions: number of people to complete                     format: integer
        - Tamper Attempts: number of people to try and tamper           format: integer
        - Finishers: names of people who finished w/ times              format: dict (name, (time, puzzle ids))
        - Puzzle Completions: number of specific puzzle completions     format: dict (id, completions)


Page IDs:
    * Generated by binascii.hexlify(os.urandom(16)).decode()
    * Handling Routes
        - data structure
            ~ store in sqlite or dict
            ~ pass using <page> in route
            ~ query via passed
            ~ have html stored
        - if statements
            ~ pass using <page> in route definition
            ~ return html string
        - separate functions
            ~ hard coded into route definition
            ~ return different templates/html strings
    * Handling Checking
        - data structure
            ~ key-value store w/ IDs as keys
            ~ one post route to check
            ~ passing ID in json
            ~ validation via ajax?
        - per id
            ~ post route for each ID
            ~ far more simple
            ~ form submission


Constants:
    * Verification Passphrase - 959563cf6dc1dfdf2b3fef8efb82315b4493f178107b6ec79da877d789d9ae64
    * Puzzle IDs - [0702851a4492cb1de55ac59db87fce4e, 7401aee89c2b8989cd35c99799794a15, 30561bc7431486bee6780e9f844fc7b6, 7316d2a7132b53c6b5d81d55a42a6c60, 72b9f37d48677a429ba0c1db4eaf5f93, e3b4ded936b613bd9cfffcfeb34fa874, 1739854f4d3ff2269274837a77ce0d75, 7c045263775a5c306f16f442ccf25226, 881b6f42d9cca3c08e361fe2dd5dcea8, d66dcec01318c9e87c2a5be246adfa53, fec66c8e8a47887eaea0bf7f5750fc85, 8571d2129c74ca323d46f11d4c33ecbd, da3ffe61ad522cd3f897efd5f50620ac, 0575ffd11831ac0adbd1ef499cf69d49, 7da2b935a167ee54ff48c2377fc0b0a2, 6a668de676f70f2f3c6e146c8009dd56]
        - Pythonic Version - ["0702851a4492cb1de55ac59db87fce4e", "7401aee89c2b8989cd35c99799794a15", "30561bc7431486bee6780e9f844fc7b6", "7316d2a7132b53c6b5d81d55a42a6c60", "72b9f37d48677a429ba0c1db4eaf5f93", "e3b4ded936b613bd9cfffcfeb34fa874", "1739854f4d3ff2269274837a77ce0d75", "7c045263775a5c306f16f442ccf25226", "881b6f42d9cca3c08e361fe2dd5dcea8", "d66dcec01318c9e87c2a5be246adfa53", "fec66c8e8a47887eaea0bf7f5750fc85", "8571d2129c74ca323d46f11d4c33ecbd", "da3ffe61ad522cd3f897efd5f50620ac", "0575ffd11831ac0adbd1ef499cf69d49", "7da2b935a167ee54ff48c2377fc0b0a2", "6a668de676f70f2f3c6e146c8009dd56"]


Email Format:
    * Structure
        - Timestamp
        - Players
        - Completions
        - Attempted Tampers
        - Finishers
        - Tamperers
    * Information
        - Timestamp: from datetime.now()
        - Players: number of people to start
        - Completions: number of people to complete
        - Attempted Tampers: number of people to try and tamper
        - Finishers: finisher's name, email & time
        - Tamperers: tamperer's name & email


Curl for CRON job:
    * curl -X PUT -u "alex:mudPIE2017&" -H "Content-Type: application/json" -d '{"pass":"testpass"}' https://challenge.alexkrantz.com/query